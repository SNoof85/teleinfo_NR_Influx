[
   {
      "id":"8e37ccc0.d690e",
      "type":"link out",
      "z":"eb54216.5ae55e",
      "name":"total out",
      "links":[
         "c0d190a.1ff567"
      ],
      "x":1515,
      "y":160,
      "wires":[
         
      ]
   },
   {
      "id":"2ffc4884.7b0da8",
      "type":"link out",
      "z":"eb54216.5ae55e",
      "name":"hp out",
      "links":[
         "b8294171.34804"
      ],
      "x":1515,
      "y":500,
      "wires":[
         
      ]
   },
   {
      "id":"9499166b.10ec68",
      "type":"link out",
      "z":"eb54216.5ae55e",
      "name":"hc out",
      "links":[
         "765371ed.a4ba9"
      ],
      "x":1515,
      "y":660,
      "wires":[
         
      ]
   },
   {
      "id":"aac13823.9db578",
      "type":"debug",
      "z":"eb54216.5ae55e",
      "name":"",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "targetType":"full",
      "x":1350,
      "y":180,
      "wires":[
         
      ]
   },
   {
      "id":"3e227c01.b67814",
      "type":"function",
      "z":"eb54216.5ae55e",
      "name":"Structure payload",
      "func":"function isNumeric(n) { \n      return !isNaN(parseFloat(n)) && isFinite(n); \n}\n\n// Pour tous les labels \nfor (var label in msg.payload ) {\n    var value = msg.payload[label];\n    \n\t// Correction des valeurs type string en numérique \t\t\n\tif (label == \"OPTARIF\")\t{\n  \t\t// L'option tarifaire choisie (Groupe \"OPTARIF\") est codée sur 4 caractères alphanumériques \n  \t\t// J'ai pris un nombre arbitraire codé dans l'ordre ci-dessous \n  \t\t// je mets le 4eme char à 0, trop de possibilités \n      \tvalue = value.substring(0, 3);\n    \n       \tif      (value==\"BAS\") value=1;// BASE => Option Base. \n  \t\telse if (value==\"HC.\") value=2;// HC.. => Option Heures Creuses. \n  \t\telse if (value==\"EJP\") value=3;// EJP. => Option EJP. \n  \t\telse if (value==\"BBR\") value=4;// BBRx => Option Tempo\n  \t\telse value = 0;\n  \t\t\n  \t\tmsg.payload[label] = value;\n\t} else if (label==\"HHPHC\") {\n      // L'horaire heures pleines/heures creuses (Groupe \"HHPHC\") est codé par un caractère A à Y \n      // J'ai choisi de prendre son code ASCII\n      msg.payload[label] = value.charCodeAt();\n    } else if ( label == \"PTEC\") {\n      // La période tarifaire en cours (Groupe \"PTEC\"), est codée sur 4 caractères \n      // J'ai pris un nombre arbitraire codé dans l'ordre ci-dessous\n      if      (value==\"TH..\") value= 1; // Toutes les Heures. \n      else if (value==\"HC..\") value= \"Heures Creuses\"; // Heures Creuses. \n      else if (value==\"HP..\") value= \"Heures Pleines\"; // Heures Pleines. \n      else if (value==\"HN..\") value= 4; // Heures Normales. \n      else if (value==\"PM..\") value= 5; // Heures de Pointe Mobile. \n      else if (value==\"HCJB\") value= 6; // Heures Creuses Jours Bleus. \n      else if (value==\"HCJW\") value= 7; // Heures Creuses Jours Blancs (White). \n      else if (value==\"HCJR\") value= 8; // Heures Creuses Jours Rouges. \n      else if (value==\"HPJB\") value= 9; // Heures Pleines Jours Bleus. \n      else if (value==\"HPJW\") value= 10;// Heures Pleines Jours Blancs (White). \n      else if (value==\"HPJR\") value= 11;// Heures Pleines Jours Rouges. \n      else value = 0;\n      \n      msg.payload[label] = value;\n    } else if ( label == \"IINST\") {\n        delete msg.payload.IINST;\n        msg.payload.IINST = Number(value)\n    } else if ( label == \"IMAX\") {\n        delete msg.payload.IMAX;\n        msg.payload.IMAX1 = Number(value);\n    } else if ( isNumeric(value) && label != \"ADCO\" ) {\n        // Transformer les valeurs numériques\n        msg.payload[label] = Number(value);\n    }\n}\n\n// Sauvegarde dans le contexte global\ncontext.global.teleinfo = msg.payload;\n\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "x":710,
      "y":360,
      "wires":[
         [
            "812b6c86.305c9",
            "8cf3ed37.fe2c7",
            "95aa5edd.51e36",
            "5dc7bfda.1b9de",
            "e1610cf2.f841e",
            "a36bf1c7.3a041",
            "aaf86bd2.f90b98",
            "dc1d5528.ed3d38"
         ]
      ]
   },
   {
      "id":"c57620a3.64e7d",
      "type":"serial in",
      "z":"eb54216.5ae55e",
      "name":"",
      "serial":"40ca77b1.eab5e8",
      "x":130,
      "y":360,
      "wires":[
         [
            "3699855b.205bea"
         ]
      ]
   },
   {
      "id":"a7c148b9.8311b8",
      "type":"function",
      "z":"eb54216.5ae55e",
      "name":"valide trame",
      "func":"// La trame complète est reçue dans 'msg'\nvar teleinfo={};\n\n// Enlever les codes début et fin de trame et récupérer les lignes 1 à 1\nvar lines = msg.payload.toString().replace(\"\\u0002\\n\",\"\").replace(\"\\r\\u0003\",\"\");\nlines = lines.split(\"\\r\\n\");\n\n// Pour chaque ligne\nfor (var line in lines) {\n\tvar i;\n  \tvar checksum = 32;\n  \t\n  \t// Recupérer le label, la valeur et la checksum\n  \t// si la checksum est un espace on le remplace par un caractère non \n  \t// autorisé en checksum (ici 's') pour eviter pb de split\n  \t// donc espace espace devient espace s\n\tvar myline = lines[line].toString().replace(\"  \",\" s\").split(\" \");\n\t\n\t// on dépile nos 3 valeurs\n\tvar check = myline.pop();\n\tvar value = myline.pop();\n\tvar label = myline.pop();\n\t\n\t// On peu repositionner la checksum à espace si c'était le cas\n\tif (check == \"s\") check = \" \";\n\n\t// Calcul de la checksum sur ce qu'on a reçu, on balaye tous les caractères\t\t\n  \tfor (i = 0; i < label.length; i++) checksum += label.charCodeAt(i);\n  \tfor (i = 0; i < value.length; i++) checksum += value.charCodeAt(i);\n \tchecksum = ((checksum%256) & 63) + 32;\n \tchecksum = String.fromCharCode(checksum);\n\t\n\t// Checksum correcte ?\n \tif (checksum == check ) {\n\t\tteleinfo[label] = value;\n\t} else {\n\t\tconsole.log(\"'%s' '%s' '%s' => Bad Checksum '%s'\", label, value, check, checksum );\n\t}\n}\nreturn [ { payload: teleinfo } ];",
      "outputs":1,
      "noerr":0,
      "x":510,
      "y":360,
      "wires":[
         [
            "3e227c01.b67814",
            "ef42a8b1.f0f278"
         ]
      ]
   },
   {
      "id":"e916ed17.5a52",
      "type":"rbe",
      "z":"eb54216.5ae55e",
      "name":"",
      "func":"rbe",
      "gap":"",
      "start":"",
      "inout":"out",
      "property":"payload",
      "x":1170,
      "y":160,
      "wires":[
         [
            "aac13823.9db578",
            "bd0a2f5a.bc4f6",
            "8e37ccc0.d690e"
         ]
      ]
   },
   {
      "id":"e2a9fd59.1a554",
      "type":"rbe",
      "z":"eb54216.5ae55e",
      "name":"",
      "func":"rbe",
      "gap":"",
      "start":"",
      "inout":"out",
      "property":"payload",
      "x":1170,
      "y":360,
      "wires":[
         [
            "f59f8bfc.4b9d18",
            "62a64dfb.0b6f34"
         ]
      ]
   },
   {
      "id":"f59f8bfc.4b9d18",
      "type":"debug",
      "z":"eb54216.5ae55e",
      "name":"",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "targetType":"full",
      "x":1350,
      "y":380,
      "wires":[
         
      ]
   },
   {
      "id":"8cf3ed37.fe2c7",
      "type":"function",
      "z":"eb54216.5ae55e",
      "name":"IINST 1",
      "func":"var IINST1 = msg.payload.IINST1\n\nmsg.payload = IINST1\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "libs":[
         
      ],
      "x":940,
      "y":820,
      "wires":[
         [
            "f56a4c2e.8cf22"
         ]
      ]
   },
   {
      "id":"6ed8fe2f.fa6fe",
      "type":"debug",
      "z":"eb54216.5ae55e",
      "name":"",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "targetType":"full",
      "x":1350,
      "y":840,
      "wires":[
         
      ]
   },
   {
      "id":"f56a4c2e.8cf22",
      "type":"rbe",
      "z":"eb54216.5ae55e",
      "name":"",
      "func":"rbe",
      "gap":"",
      "start":"",
      "inout":"out",
      "property":"payload",
      "x":1170,
      "y":820,
      "wires":[
         [
            "6ed8fe2f.fa6fe",
            "befe0dec.f0691"
         ]
      ]
   },
   {
      "id":"3699855b.205bea",
      "type":"delay",
      "z":"eb54216.5ae55e",
      "name":"",
      "pauseType":"rate",
      "timeout":"5",
      "timeoutUnits":"seconds",
      "rate":"1",
      "nbRateUnits":"15",
      "rateUnits":"second",
      "randomFirst":"1",
      "randomLast":"5",
      "randomUnits":"seconds",
      "drop":true,
      "x":320,
      "y":360,
      "wires":[
         [
            "a7c148b9.8311b8",
            "5edb3662.06af78"
         ]
      ]
   },
   {
      "id":"812b6c86.305c9",
      "type":"debug",
      "z":"eb54216.5ae55e",
      "name":"",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "targetType":"full",
      "x":710,
      "y":260,
      "wires":[
         
      ]
   },
   {
      "id":"ef42a8b1.f0f278",
      "type":"debug",
      "z":"eb54216.5ae55e",
      "name":"",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "targetType":"full",
      "x":510,
      "y":260,
      "wires":[
         
      ]
   },
   {
      "id":"5edb3662.06af78",
      "type":"debug",
      "z":"eb54216.5ae55e",
      "name":"",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "targetType":"full",
      "x":330,
      "y":260,
      "wires":[
         
      ]
   },
   {
      "id":"4eedbdff.9a0a24",
      "type":"influxdb out",
      "z":"eb54216.5ae55e",
      "influxdb":"506ad1a9.81606",
      "name":"index Wh",
      "measurement":"Wh",
      "precision":"",
      "retentionPolicy":"",
      "x":1360,
      "y":140,
      "wires":[
         
      ]
   },
   {
      "id":"bd0a2f5a.bc4f6",
      "type":"function",
      "z":"eb54216.5ae55e",
      "name":"",
      "func":"var INDEX_WH = msg.payload;\nmsg.payload = [];\nfields = {\"value\":INDEX_WH};\ntags =  {\"entity\":\"teleinfo_total\"};\nmsg.payload = [fields,tags];\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "libs":[
         
      ],
      "x":1170,
      "y":100,
      "wires":[
         [
            "229b27a3.d6fe88",
            "4eedbdff.9a0a24"
         ]
      ]
   },
   {
      "id":"229b27a3.d6fe88",
      "type":"debug",
      "z":"eb54216.5ae55e",
      "name":"",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "targetType":"full",
      "x":1350,
      "y":100,
      "wires":[
         
      ]
   },
   {
      "id":"62a64dfb.0b6f34",
      "type":"function",
      "z":"eb54216.5ae55e",
      "name":"",
      "func":"var INDEX_KWH = msg.payload;\nmsg.payload = [];\nfields = {\"value\":INDEX_KWH};\ntags =  {\"entity\":\"teleinfo_total\"};\nmsg.payload = [fields,tags];\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "libs":[
         
      ],
      "x":1170,
      "y":300,
      "wires":[
         [
            "6faa525f.be85ac",
            "6905de18.c3928"
         ]
      ]
   },
   {
      "id":"6faa525f.be85ac",
      "type":"influxdb out",
      "z":"eb54216.5ae55e",
      "influxdb":"506ad1a9.81606",
      "name":"index kWh",
      "measurement":"kWh",
      "precision":"",
      "retentionPolicy":"",
      "x":1370,
      "y":340,
      "wires":[
         
      ]
   },
   {
      "id":"6905de18.c3928",
      "type":"debug",
      "z":"eb54216.5ae55e",
      "name":"",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "targetType":"full",
      "x":1350,
      "y":300,
      "wires":[
         
      ]
   },
   {
      "id":"befe0dec.f0691",
      "type":"function",
      "z":"eb54216.5ae55e",
      "name":"",
      "func":"var IINST1 = msg.payload;\nmsg.payload = [];\nfields = {\"value\":IINST1};\ntags =  {\"entity\":\"teleinfo_i1\"};\nmsg.payload = [fields,tags];\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "libs":[
         
      ],
      "x":1170,
      "y":760,
      "wires":[
         [
            "17650f82.260a3",
            "a61e5a1f.63fb18"
         ]
      ]
   },
   {
      "id":"17650f82.260a3",
      "type":"influxdb out",
      "z":"eb54216.5ae55e",
      "influxdb":"506ad1a9.81606",
      "name":"IINST1 A",
      "measurement":"A",
      "precision":"",
      "retentionPolicy":"",
      "x":1360,
      "y":800,
      "wires":[
         
      ]
   },
   {
      "id":"a61e5a1f.63fb18",
      "type":"debug",
      "z":"eb54216.5ae55e",
      "name":"",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "targetType":"full",
      "x":1350,
      "y":760,
      "wires":[
         
      ]
   },
   {
      "id":"5dc7bfda.1b9de",
      "type":"function",
      "z":"eb54216.5ae55e",
      "name":"INDEX HC WH",
      "func":"var INDEX_HC = msg.payload.HCHC\n\nmsg.payload = INDEX_HC\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "libs":[
         
      ],
      "x":960,
      "y":660,
      "wires":[
         [
            "1e807bf5.e04ff4"
         ]
      ]
   },
   {
      "id":"95aa5edd.51e36",
      "type":"function",
      "z":"eb54216.5ae55e",
      "name":"INDEX HP WH",
      "func":"var INDEX_HP = msg.payload.HCHP\n\nmsg.payload = INDEX_HP\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "libs":[
         
      ],
      "x":960,
      "y":500,
      "wires":[
         [
            "71553f73.001f8"
         ]
      ]
   },
   {
      "id":"71553f73.001f8",
      "type":"rbe",
      "z":"eb54216.5ae55e",
      "name":"",
      "func":"rbe",
      "gap":"",
      "start":"",
      "inout":"out",
      "property":"payload",
      "x":1170,
      "y":500,
      "wires":[
         [
            "3969f4ae.3fa58c",
            "db4ccd32.b0d58",
            "2ffc4884.7b0da8"
         ]
      ]
   },
   {
      "id":"1e807bf5.e04ff4",
      "type":"rbe",
      "z":"eb54216.5ae55e",
      "name":"",
      "func":"rbe",
      "gap":"",
      "start":"",
      "inout":"out",
      "property":"payload",
      "x":1170,
      "y":660,
      "wires":[
         [
            "a164650d.7a8ee8",
            "fbd5b1e8.a87d5",
            "9499166b.10ec68"
         ]
      ]
   },
   {
      "id":"3969f4ae.3fa58c",
      "type":"function",
      "z":"eb54216.5ae55e",
      "name":"",
      "func":"var INDEX_HP = msg.payload;\nmsg.payload = [];\nfields = {\"value\":INDEX_HP};\ntags =  {\"entity\":\"teleinfo_hp\"};\nmsg.payload = [fields,tags];\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "libs":[
         
      ],
      "x":1180,
      "y":440,
      "wires":[
         [
            "78279baa.1de234",
            "77a0041f.96698c"
         ]
      ]
   },
   {
      "id":"a164650d.7a8ee8",
      "type":"function",
      "z":"eb54216.5ae55e",
      "name":"",
      "func":"var INDEX_HC = msg.payload;\nmsg.payload = [];\nfields = {\"value\":INDEX_HC};\ntags =  {\"entity\":\"teleinfo_hc\"};\nmsg.payload = [fields,tags];\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "libs":[
         
      ],
      "x":1180,
      "y":600,
      "wires":[
         [
            "75d09971.896db8",
            "367ad16b.dafafe"
         ]
      ]
   },
   {
      "id":"e1610cf2.f841e",
      "type":"function",
      "z":"eb54216.5ae55e",
      "name":"INDEX TOTAL WH",
      "func":"var INDEX = msg.payload.HCHC + msg.payload.HCHP\n\nmsg.payload = INDEX\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "x":970,
      "y":160,
      "wires":[
         [
            "e916ed17.5a52"
         ]
      ]
   },
   {
      "id":"a36bf1c7.3a041",
      "type":"function",
      "z":"eb54216.5ae55e",
      "name":"INDEX TOTAL KWH",
      "func":"var INDEX = msg.payload.HCHC + msg.payload.HCHP\n\nmsg.payload = INDEX / 1000\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "x":980,
      "y":360,
      "wires":[
         [
            "e2a9fd59.1a554"
         ]
      ]
   },
   {
      "id":"db4ccd32.b0d58",
      "type":"debug",
      "z":"eb54216.5ae55e",
      "name":"",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "targetType":"full",
      "x":1350,
      "y":520,
      "wires":[
         
      ]
   },
   {
      "id":"77a0041f.96698c",
      "type":"influxdb out",
      "z":"eb54216.5ae55e",
      "influxdb":"506ad1a9.81606",
      "name":"index HP Wh",
      "measurement":"Wh",
      "precision":"",
      "retentionPolicy":"",
      "x":1370,
      "y":480,
      "wires":[
         
      ]
   },
   {
      "id":"78279baa.1de234",
      "type":"debug",
      "z":"eb54216.5ae55e",
      "name":"",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "targetType":"full",
      "x":1350,
      "y":440,
      "wires":[
         
      ]
   },
   {
      "id":"fbd5b1e8.a87d5",
      "type":"debug",
      "z":"eb54216.5ae55e",
      "name":"",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "targetType":"full",
      "x":1350,
      "y":680,
      "wires":[
         
      ]
   },
   {
      "id":"367ad16b.dafafe",
      "type":"influxdb out",
      "z":"eb54216.5ae55e",
      "influxdb":"506ad1a9.81606",
      "name":"index HC Wh",
      "measurement":"Wh",
      "precision":"",
      "retentionPolicy":"",
      "x":1370,
      "y":640,
      "wires":[
         
      ]
   },
   {
      "id":"75d09971.896db8",
      "type":"debug",
      "z":"eb54216.5ae55e",
      "name":"",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "targetType":"full",
      "x":1350,
      "y":600,
      "wires":[
         
      ]
   },
   {
      "id":"aaf86bd2.f90b98",
      "type":"function",
      "z":"eb54216.5ae55e",
      "name":"IINST2",
      "func":"var IINST2 = msg.payload.IINST2\n\nmsg.payload = IINST2\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "libs":[
         
      ],
      "x":940,
      "y":940,
      "wires":[
         [
            "936343a9.9b207"
         ]
      ]
   },
   {
      "id":"ed0c4a64.5ca2a8",
      "type":"debug",
      "z":"eb54216.5ae55e",
      "name":"",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "targetType":"full",
      "x":1350,
      "y":960,
      "wires":[
         
      ]
   },
   {
      "id":"936343a9.9b207",
      "type":"rbe",
      "z":"eb54216.5ae55e",
      "name":"",
      "func":"rbe",
      "gap":"",
      "start":"",
      "inout":"out",
      "property":"payload",
      "x":1170,
      "y":940,
      "wires":[
         [
            "ed0c4a64.5ca2a8",
            "bc4c7f84.8a463"
         ]
      ]
   },
   {
      "id":"bc4c7f84.8a463",
      "type":"function",
      "z":"eb54216.5ae55e",
      "name":"",
      "func":"var IINST2 = msg.payload;\nmsg.payload = [];\nfields = {\"value\":IINST2};\ntags =  {\"entity\":\"teleinfo_i2\"};\nmsg.payload = [fields,tags];\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "libs":[
         
      ],
      "x":1170,
      "y":880,
      "wires":[
         [
            "e235099a.520f08",
            "aa4cd5e8.c0cd08"
         ]
      ]
   },
   {
      "id":"e235099a.520f08",
      "type":"influxdb out",
      "z":"eb54216.5ae55e",
      "influxdb":"506ad1a9.81606",
      "name":"IINST2 A",
      "measurement":"A",
      "precision":"",
      "retentionPolicy":"",
      "x":1360,
      "y":920,
      "wires":[
         
      ]
   },
   {
      "id":"aa4cd5e8.c0cd08",
      "type":"debug",
      "z":"eb54216.5ae55e",
      "name":"",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "targetType":"full",
      "x":1350,
      "y":880,
      "wires":[
         
      ]
   },
   {
      "id":"dc1d5528.ed3d38",
      "type":"function",
      "z":"eb54216.5ae55e",
      "name":"IINST3",
      "func":"var IINST3 = msg.payload.IINST3\n\nmsg.payload = IINST3\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "libs":[
         
      ],
      "x":940,
      "y":1060,
      "wires":[
         [
            "fe972bb3.2abd48"
         ]
      ]
   },
   {
      "id":"fb1ec71a.a3dab8",
      "type":"debug",
      "z":"eb54216.5ae55e",
      "name":"",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "targetType":"full",
      "x":1350,
      "y":1080,
      "wires":[
         
      ]
   },
   {
      "id":"fe972bb3.2abd48",
      "type":"rbe",
      "z":"eb54216.5ae55e",
      "name":"",
      "func":"rbe",
      "gap":"",
      "start":"",
      "inout":"out",
      "property":"payload",
      "x":1170,
      "y":1060,
      "wires":[
         [
            "fb1ec71a.a3dab8",
            "b6afc966.959e98"
         ]
      ]
   },
   {
      "id":"b6afc966.959e98",
      "type":"function",
      "z":"eb54216.5ae55e",
      "name":"",
      "func":"var IINST3 = msg.payload;\nmsg.payload = [];\nfields = {\"value\":IINST3};\ntags =  {\"entity\":\"teleinfo_i3\"};\nmsg.payload = [fields,tags];\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "libs":[
         
      ],
      "x":1170,
      "y":1000,
      "wires":[
         [
            "bcd1cbea.154848",
            "92e1b331.ac87a"
         ]
      ]
   },
   {
      "id":"bcd1cbea.154848",
      "type":"influxdb out",
      "z":"eb54216.5ae55e",
      "influxdb":"506ad1a9.81606",
      "name":"IINST A",
      "measurement":"A",
      "precision":"",
      "retentionPolicy":"",
      "x":1360,
      "y":1040,
      "wires":[
         
      ]
   },
   {
      "id":"92e1b331.ac87a",
      "type":"debug",
      "z":"eb54216.5ae55e",
      "name":"",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "targetType":"full",
      "x":1350,
      "y":1000,
      "wires":[
         
      ]
   },
   {
      "id":"40ca77b1.eab5e8",
      "type":"serial-port",
      "serialport":"/dev/ttyUSB0",
      "serialbaud":"1200",
      "databits":"7",
      "parity":"even",
      "stopbits":"1",
      "waitfor":"",
      "newline":"0x3",
      "bin":"false",
      "out":"char",
      "addchar":"",
      "responsetimeout":"10000"
   },
   {
      "id":"506ad1a9.81606",
      "type":"influxdb",
      "hostname":"192.168.1.10",
      "port":"8086",
      "protocol":"http",
      "database":"edf",
      "name":"EDF",
      "usetls":false,
      "tls":"",
      "influxdbVersion":"1.x"
   }
]
