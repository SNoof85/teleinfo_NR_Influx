[
   {
      "id":"3dd1c642.d3395a",
      "type":"debug",
      "z":"eb54216.5ae55e",
      "name":"",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "targetType":"full",
      "x":1330,
      "y":220,
      "wires":[
         
      ]
   },
   {
      "id":"fa2ce675.a23968",
      "type":"function",
      "z":"eb54216.5ae55e",
      "name":"Structure payload",
      "func":"function isNumeric(n) { \n      return !isNaN(parseFloat(n)) && isFinite(n); \n}\n\n// Pour tous les labels \nfor (var label in msg.payload ) {\n    var value = msg.payload[label];\n    \n\t// Correction des valeurs type string en numérique \t\t\n\tif (label == \"OPTARIF\")\t{\n  \t\t// L'option tarifaire choisie (Groupe \"OPTARIF\") est codée sur 4 caractères alphanumériques \n  \t\t// J'ai pris un nombre arbitraire codé dans l'ordre ci-dessous \n  \t\t// je mets le 4eme char à 0, trop de possibilités \n      \tvalue = value.substring(0, 3);\n    \n       \tif      (value==\"BAS\") value=1;// BASE => Option Base. \n  \t\telse if (value==\"HC.\") value=2;// HC.. => Option Heures Creuses. \n  \t\telse if (value==\"EJP\") value=3;// EJP. => Option EJP. \n  \t\telse if (value==\"BBR\") value=4;// BBRx => Option Tempo\n  \t\telse value = 0;\n  \t\t\n  \t\tmsg.payload[label] = value;\n\t} else if (label==\"HHPHC\") {\n      // L'horaire heures pleines/heures creuses (Groupe \"HHPHC\") est codé par un caractère A à Y \n      // J'ai choisi de prendre son code ASCII\n      msg.payload[label] = value.charCodeAt();\n    } else if ( label == \"PTEC\") {\n      // La période tarifaire en cours (Groupe \"PTEC\"), est codée sur 4 caractères \n      // J'ai pris un nombre arbitraire codé dans l'ordre ci-dessous\n      if      (value==\"TH..\") value= 1; // Toutes les Heures. \n      else if (value==\"HC..\") value= \"Heures Creuses\"; // Heures Creuses. \n      else if (value==\"HP..\") value= \"Heures Pleines\"; // Heures Pleines. \n      else if (value==\"HN..\") value= 4; // Heures Normales. \n      else if (value==\"PM..\") value= 5; // Heures de Pointe Mobile. \n      else if (value==\"HCJB\") value= 6; // Heures Creuses Jours Bleus. \n      else if (value==\"HCJW\") value= 7; // Heures Creuses Jours Blancs (White). \n      else if (value==\"HCJR\") value= 8; // Heures Creuses Jours Rouges. \n      else if (value==\"HPJB\") value= 9; // Heures Pleines Jours Bleus. \n      else if (value==\"HPJW\") value= 10;// Heures Pleines Jours Blancs (White). \n      else if (value==\"HPJR\") value= 11;// Heures Pleines Jours Rouges. \n      else value = 0;\n      \n      msg.payload[label] = value;\n    } else if ( label == \"IINST\") {\n        delete msg.payload.IINST;\n        msg.payload.IINST = Number(value)\n    } else if ( label == \"IMAX\") {\n        delete msg.payload.IMAX;\n        msg.payload.IMAX1 = Number(value);\n    } else if ( isNumeric(value) && label != \"ADCO\" ) {\n        // Transformer les valeurs numériques\n        msg.payload[label] = Number(value);\n    }\n}\n\n// Sauvegarde dans le contexte global\ncontext.global.teleinfo = msg.payload;\n\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "x":690,
      "y":400,
      "wires":[
         [
            "1be42422.e7c2bc",
            "40469b50.bd08e4",
            "a1e1caa.7f56538",
            "528c71d.13a7d9",
            "3d7b5548.32cafa",
            "225bd4bf.5c7dac"
         ]
      ]
   },
   {
      "id":"f0c9146e.77e618",
      "type":"serial in",
      "z":"eb54216.5ae55e",
      "name":"",
      "serial":"40ca77b1.eab5e8",
      "x":110,
      "y":400,
      "wires":[
         [
            "e52fb173.bcb09"
         ]
      ]
   },
   {
      "id":"1be42422.e7c2bc",
      "type":"function",
      "z":"eb54216.5ae55e",
      "name":"INDEX WH",
      "func":"var INDEX = msg.payload.BASE\n\nmsg.payload = INDEX\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "x":930,
      "y":200,
      "wires":[
         [
            "51c87df9.66b284"
         ]
      ]
   },
   {
      "id":"b67032bb.047e9",
      "type":"function",
      "z":"eb54216.5ae55e",
      "name":"valide trame",
      "func":"// La trame complète est reçue dans 'msg'\nvar teleinfo={};\n\n// Enlever les codes début et fin de trame et récupérer les lignes 1 à 1\nvar lines = msg.payload.toString().replace(\"\\u0002\\n\",\"\").replace(\"\\r\\u0003\",\"\");\nlines = lines.split(\"\\r\\n\");\n\n// Pour chaque ligne\nfor (var line in lines) {\n\tvar i;\n  \tvar checksum = 32;\n  \t\n  \t// Recupérer le label, la valeur et la checksum\n  \t// si la checksum est un espace on le remplace par un caractère non \n  \t// autorisé en checksum (ici 's') pour eviter pb de split\n  \t// donc espace espace devient espace s\n\tvar myline = lines[line].toString().replace(\"  \",\" s\").split(\" \");\n\t\n\t// on dépile nos 3 valeurs\n\tvar check = myline.pop();\n\tvar value = myline.pop();\n\tvar label = myline.pop();\n\t\n\t// On peu repositionner la checksum à espace si c'était le cas\n\tif (check == \"s\") check = \" \";\n\n\t// Calcul de la checksum sur ce qu'on a reçu, on balaye tous les caractères\t\t\n  \tfor (i = 0; i < label.length; i++) checksum += label.charCodeAt(i);\n  \tfor (i = 0; i < value.length; i++) checksum += value.charCodeAt(i);\n \tchecksum = ((checksum%256) & 63) + 32;\n \tchecksum = String.fromCharCode(checksum);\n\t\n\t// Checksum correcte ?\n \tif (checksum == check ) {\n\t\tteleinfo[label] = value;\n\t} else {\n\t\tconsole.log(\"'%s' '%s' '%s' => Bad Checksum '%s'\", label, value, check, checksum );\n\t}\n}\nreturn [ { payload: teleinfo } ];",
      "outputs":1,
      "noerr":0,
      "x":490,
      "y":400,
      "wires":[
         [
            "fa2ce675.a23968",
            "2ad83dc.3605ac2"
         ]
      ]
   },
   {
      "id":"51c87df9.66b284",
      "type":"rbe",
      "z":"eb54216.5ae55e",
      "name":"",
      "func":"rbe",
      "gap":"",
      "start":"",
      "inout":"out",
      "property":"payload",
      "x":1150,
      "y":200,
      "wires":[
         [
            "3dd1c642.d3395a",
            "13caf006.136a2",
            "da6f8d58.650bf"
         ]
      ]
   },
   {
      "id":"40469b50.bd08e4",
      "type":"function",
      "z":"eb54216.5ae55e",
      "name":"INDEX KWH",
      "func":"var INDEX = msg.payload.BASE\n\nmsg.payload = INDEX / 1000\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "x":930,
      "y":400,
      "wires":[
         [
            "b003ff43.6a1e4"
         ]
      ]
   },
   {
      "id":"b003ff43.6a1e4",
      "type":"rbe",
      "z":"eb54216.5ae55e",
      "name":"",
      "func":"rbe",
      "gap":"",
      "start":"",
      "inout":"out",
      "property":"payload",
      "x":1150,
      "y":400,
      "wires":[
         [
            "3b271597.88ec0a",
            "d0cda0cb.40489"
         ]
      ]
   },
   {
      "id":"3b271597.88ec0a",
      "type":"debug",
      "z":"eb54216.5ae55e",
      "name":"",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "targetType":"full",
      "x":1330,
      "y":420,
      "wires":[
         
      ]
   },
   {
      "id":"528c71d.13a7d9",
      "type":"function",
      "z":"eb54216.5ae55e",
      "name":"IINST1",
      "func":"var IINST = msg.payload.IINST1\n\nmsg.payload = IINST1\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "libs":[
         
      ],
      "x":920,
      "y":600,
      "wires":[
         [
            "bbf538b3.f3bd28"
         ]
      ]
   },
   {
      "id":"e70a57b2.242a18",
      "type":"debug",
      "z":"eb54216.5ae55e",
      "name":"",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "targetType":"full",
      "x":1330,
      "y":620,
      "wires":[
         
      ]
   },
   {
      "id":"bbf538b3.f3bd28",
      "type":"rbe",
      "z":"eb54216.5ae55e",
      "name":"",
      "func":"rbe",
      "gap":"",
      "start":"",
      "inout":"out",
      "property":"payload",
      "x":1150,
      "y":600,
      "wires":[
         [
            "e70a57b2.242a18",
            "4772056e.1f15ac"
         ]
      ]
   },
   {
      "id":"e52fb173.bcb09",
      "type":"delay",
      "z":"eb54216.5ae55e",
      "name":"",
      "pauseType":"rate",
      "timeout":"5",
      "timeoutUnits":"seconds",
      "rate":"1",
      "nbRateUnits":"15",
      "rateUnits":"second",
      "randomFirst":"1",
      "randomLast":"5",
      "randomUnits":"seconds",
      "drop":true,
      "x":300,
      "y":400,
      "wires":[
         [
            "b67032bb.047e9",
            "97f4204.90330e"
         ]
      ]
   },
   {
      "id":"a1e1caa.7f56538",
      "type":"debug",
      "z":"eb54216.5ae55e",
      "name":"",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "targetType":"full",
      "x":690,
      "y":300,
      "wires":[
         
      ]
   },
   {
      "id":"2ad83dc.3605ac2",
      "type":"debug",
      "z":"eb54216.5ae55e",
      "name":"",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "targetType":"full",
      "x":490,
      "y":300,
      "wires":[
         
      ]
   },
   {
      "id":"97f4204.90330e",
      "type":"debug",
      "z":"eb54216.5ae55e",
      "name":"",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "targetType":"full",
      "x":310,
      "y":300,
      "wires":[
         
      ]
   },
   {
      "id":"18262028.d1a2",
      "type":"influxdb out",
      "z":"eb54216.5ae55e",
      "influxdb":"506ad1a9.81606",
      "name":"index Wh",
      "measurement":"Wh",
      "precision":"",
      "retentionPolicy":"",
      "x":1340,
      "y":180,
      "wires":[
         
      ]
   },
   {
      "id":"13caf006.136a2",
      "type":"function",
      "z":"eb54216.5ae55e",
      "name":"",
      "func":"var INDEX_WH = msg.payload;\nmsg.payload = [];\nfields = {\"value\":INDEX_WH};\ntags =  {\"entity\":\"teleinfo\"};\nmsg.payload = [fields,tags];\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "x":1150,
      "y":140,
      "wires":[
         [
            "a68f815b.20199",
            "18262028.d1a2"
         ]
      ]
   },
   {
      "id":"a68f815b.20199",
      "type":"debug",
      "z":"eb54216.5ae55e",
      "name":"",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "targetType":"full",
      "x":1330,
      "y":140,
      "wires":[
         
      ]
   },
   {
      "id":"d0cda0cb.40489",
      "type":"function",
      "z":"eb54216.5ae55e",
      "name":"",
      "func":"var INDEX_KWH = msg.payload;\nmsg.payload = [];\nfields = {\"value\":INDEX_KWH};\ntags =  {\"entity\":\"teleinfo\"};\nmsg.payload = [fields,tags];\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "x":1150,
      "y":340,
      "wires":[
         [
            "6f1e1033.48f75",
            "9edf2e42.7aa36"
         ]
      ]
   },
   {
      "id":"6f1e1033.48f75",
      "type":"influxdb out",
      "z":"eb54216.5ae55e",
      "influxdb":"506ad1a9.81606",
      "name":"index kWh",
      "measurement":"kWh",
      "precision":"",
      "retentionPolicy":"",
      "x":1350,
      "y":380,
      "wires":[
         
      ]
   },
   {
      "id":"9edf2e42.7aa36",
      "type":"debug",
      "z":"eb54216.5ae55e",
      "name":"",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "targetType":"full",
      "x":1330,
      "y":340,
      "wires":[
         
      ]
   },
   {
      "id":"4772056e.1f15ac",
      "type":"function",
      "z":"eb54216.5ae55e",
      "name":"",
      "func":"var IINST1 = msg.payload;\nmsg.payload = [];\nfields = {\"value\":IINST1};\ntags =  {\"entity\":\"teleinfo_i1\"};\nmsg.payload = [fields,tags];\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "libs":[
         
      ],
      "x":1150,
      "y":540,
      "wires":[
         [
            "32dcbfd7.b113b",
            "44acb462.bfbb4c"
         ]
      ]
   },
   {
      "id":"32dcbfd7.b113b",
      "type":"influxdb out",
      "z":"eb54216.5ae55e",
      "influxdb":"506ad1a9.81606",
      "name":"IINST1 A",
      "measurement":"A",
      "precision":"",
      "retentionPolicy":"",
      "x":1340,
      "y":580,
      "wires":[
         
      ]
   },
   {
      "id":"44acb462.bfbb4c",
      "type":"debug",
      "z":"eb54216.5ae55e",
      "name":"",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "targetType":"full",
      "x":1330,
      "y":540,
      "wires":[
         
      ]
   },
   {
      "id":"da6f8d58.650bf",
      "type":"link out",
      "z":"eb54216.5ae55e",
      "name":"index Wh out",
      "links":[
         "eeedfbd8.5cdbc8"
      ],
      "x":1515,
      "y":200,
      "wires":[
         
      ]
   },
   {
      "id":"3d7b5548.32cafa",
      "type":"function",
      "z":"eb54216.5ae55e",
      "name":"IINST2",
      "func":"var IINST2 = msg.payload.IINST2\n\nmsg.payload = IINST2\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "libs":[
         
      ],
      "x":920,
      "y":740,
      "wires":[
         [
            "83c04dff.f87f6"
         ]
      ]
   },
   {
      "id":"4105394c.e22068",
      "type":"debug",
      "z":"eb54216.5ae55e",
      "name":"",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "targetType":"full",
      "x":1330,
      "y":760,
      "wires":[
         
      ]
   },
   {
      "id":"83c04dff.f87f6",
      "type":"rbe",
      "z":"eb54216.5ae55e",
      "name":"",
      "func":"rbe",
      "gap":"",
      "start":"",
      "inout":"out",
      "property":"payload",
      "x":1150,
      "y":740,
      "wires":[
         [
            "4105394c.e22068",
            "478e2d0b.4ee3c4"
         ]
      ]
   },
   {
      "id":"478e2d0b.4ee3c4",
      "type":"function",
      "z":"eb54216.5ae55e",
      "name":"",
      "func":"var IINST2 = msg.payload;\nmsg.payload = [];\nfields = {\"value\":IINST2};\ntags =  {\"entity\":\"teleinfo_i2\"};\nmsg.payload = [fields,tags];\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "libs":[
         
      ],
      "x":1150,
      "y":680,
      "wires":[
         [
            "840dd081.0396b",
            "f9695675.dc2ad8"
         ]
      ]
   },
   {
      "id":"840dd081.0396b",
      "type":"influxdb out",
      "z":"eb54216.5ae55e",
      "influxdb":"506ad1a9.81606",
      "name":"IINST2 A",
      "measurement":"A",
      "precision":"",
      "retentionPolicy":"",
      "x":1340,
      "y":720,
      "wires":[
         
      ]
   },
   {
      "id":"f9695675.dc2ad8",
      "type":"debug",
      "z":"eb54216.5ae55e",
      "name":"",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "targetType":"full",
      "x":1330,
      "y":680,
      "wires":[
         
      ]
   },
   {
      "id":"225bd4bf.5c7dac",
      "type":"function",
      "z":"eb54216.5ae55e",
      "name":"IINST3",
      "func":"var IINST3 = msg.payload.IINST3\n\nmsg.payload = IINST3\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "libs":[
         
      ],
      "x":920,
      "y":880,
      "wires":[
         [
            "2a5c7622.1f584a"
         ]
      ]
   },
   {
      "id":"18a36588.0a724a",
      "type":"debug",
      "z":"eb54216.5ae55e",
      "name":"",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "targetType":"full",
      "x":1330,
      "y":900,
      "wires":[
         
      ]
   },
   {
      "id":"2a5c7622.1f584a",
      "type":"rbe",
      "z":"eb54216.5ae55e",
      "name":"",
      "func":"rbe",
      "gap":"",
      "start":"",
      "inout":"out",
      "property":"payload",
      "x":1150,
      "y":880,
      "wires":[
         [
            "18a36588.0a724a",
            "9cca077.5d889f8"
         ]
      ]
   },
   {
      "id":"9cca077.5d889f8",
      "type":"function",
      "z":"eb54216.5ae55e",
      "name":"",
      "func":"var IINST3 = msg.payload;\nmsg.payload = [];\nfields = {\"value\":IINST3};\ntags =  {\"entity\":\"teleinfo_i3\"};\nmsg.payload = [fields,tags];\nreturn msg;",
      "outputs":1,
      "noerr":0,
      "initialize":"",
      "finalize":"",
      "libs":[
         
      ],
      "x":1150,
      "y":820,
      "wires":[
         [
            "2e13c41b.d7f33c",
            "189f047f.6848dc"
         ]
      ]
   },
   {
      "id":"2e13c41b.d7f33c",
      "type":"influxdb out",
      "z":"eb54216.5ae55e",
      "influxdb":"506ad1a9.81606",
      "name":"IINST3 A",
      "measurement":"A",
      "precision":"",
      "retentionPolicy":"",
      "x":1340,
      "y":860,
      "wires":[
         
      ]
   },
   {
      "id":"189f047f.6848dc",
      "type":"debug",
      "z":"eb54216.5ae55e",
      "name":"",
      "active":false,
      "tosidebar":true,
      "console":false,
      "tostatus":false,
      "complete":"true",
      "targetType":"full",
      "x":1330,
      "y":820,
      "wires":[
         
      ]
   },
   {
      "id":"40ca77b1.eab5e8",
      "type":"serial-port",
      "serialport":"/dev/ttyUSB0",
      "serialbaud":"1200",
      "databits":"7",
      "parity":"even",
      "stopbits":"1",
      "waitfor":"",
      "newline":"0x3",
      "bin":"false",
      "out":"char",
      "addchar":"",
      "responsetimeout":"10000"
   },
   {
      "id":"506ad1a9.81606",
      "type":"influxdb",
      "hostname":"192.168.1.10",
      "port":"8086",
      "protocol":"http",
      "database":"edf",
      "name":"EDF",
      "usetls":false,
      "tls":"",
      "influxdbVersion":"1.x"
   }
]
